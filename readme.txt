                    ==============================
                          BatchBuilder v1.0
                            (c) 2018 Ivanq
                    ==============================

BatchBuilder - система сборки BAT/CMD файлов.


                    ------------------------------
                         Пример использования
                    ------------------------------

Начальные действия:
1. Копируем build.cmd и папку compiler куда-нибудь (например, в batch_test).
2. Создаем папку src и кидаем в нее файл entry.cmd. entry.cmd - ваш BAT.

После изменений
1. Запускаем build.cmd.
2. Появляется папку dist со скриптом bootstrap.cmd, запускаем его.


                    ------------------------------
                         Настройка "под себя"
                    ------------------------------

Для управления BatchBuilder в папке src можно создать файл build.ini. Имеются следующие опции:

1. entry=<filename>
   Значение по умолчанию: entry.cmd

   Скрипт, который будет запускаться при старте.

2. delete_compiled=<yes/no>
   Значение по умолчанию: yes

   Удалять ли скомпилированные BAT-файлы. Если выбрано no, скомпилированный код будет храниться в папке compiler\compiled.

3. compile_if=<rules>
   Значение по умолчанию: batch ~-4 .cmd,batch ~-4 .bat

   Определяет, какие файлы будут обработаны компилятором BatchBuilder.

   Набор правил разделяется запятой. Сами же правила (~-4 .cmd и ~-4 .bat) делятся на имя компилятора (batch), ключ (~-4) и значение (.cmd и .bat).

   Если ключ начинается с тильды (~), а следующее за ней число - отрицательное (-4), то будут учитываться последние -n знаков (4). Если число положительное, будут учитываться все знаки, кроме первых n. Затем знаки сравниваются со значением.

   Если ключ не начинается с тильды, то это правило замены. Например, ключ a=b означает "заменить все a на b и затем сравнить со значением".

   Пример:
    batch ~-4 .cmd,batch ~-4 .bat
    Обрабатывать файлы, у которых последние 4 символа - .cmd или .bat (то есть, имеют расширение cmd или bat), компилятором batch.

   Пример:
    batch o=a hello.bat
    Обрабатывать файлы, имя которых равно hello.bat или hella.bat, компилятором batch.

4. packed=<yes/no/local>
   Значение по умолчанию: yes

   Определяет, должен ли BatchBuilder упаковывать проект в один файл.

   В случае, если значение - no, будет создан файл bootstrap.cmd и папка contents, содержащая откомпилированные скрипты, и при запуске папка contents будет скопирована в %TEMP%.

   Если значение - local, будут также созданы файл bootstrap.cmd и папка contents, однако скрипт будет запущен из директории contents, а не %TEMP%.

   Если же значение - yes, файл bootstrap.cmd будет содержать распаковщик и сам архив, и скрипт будет запущен из %TEMP%.


                    ------------------------------
                       Компилятор BatchBuilder
                    ------------------------------

Для упрощения работы BatchBuilder представляет возможность создания модулей. Модуль - обычный BAT-файл. Пример модуля:

+------------------------------------------------+
| hi.bat                                         |
+------------------------------------------------+
| export say_hello                               |
|  echo Hello                                    |
| end export                                     |
+------------------------------------------------+

Сохраним его в папку src. Теперь напишем скрипт, использующий say_hello:

+------------------------------------------------+
| entry.cmd                                      |
+------------------------------------------------+
| import say_hello                               |
+------------------------------------------------+

Компилятор BatchBuilder заменит "import say_hello" на вызов "echo Hello".


                    ------------------------------
                          Аргументы методов
                    ------------------------------

При вызове "import say_hello" мы могли передать дополнительные данные - например, имя:

+------------------------------------------------+
| entry.cmd                                      |
+------------------------------------------------+
| import say_hello Kirill                        |
| import say_hello Vanya                         |
+------------------------------------------------+

В таком случае первое переданное значение будет доступно как %1, второе - как %2 и так далее.

+------------------------------------------------+
| hi.bat                                         |
+------------------------------------------------+
| export say_hello                               |
|  echo Hello, %1!                               |
| end export                                     |
+------------------------------------------------+


Модули могут быть полезны для выполнения рутинных операция, например, запроса на удаление папки.

+------------------------------------------------+
| delete.cmd                                     |
+------------------------------------------------+
| export delete_dir                              |
|  set /p agree=Do you want to delete %1?        |
|  if "%agree%" == "yes" (                       |
|   rmdir /S /Q %1                               |
|  )                                             |
| end export                                     |
+------------------------------------------------+

+------------------------------------------------+
| entry.cmd                                      |
+------------------------------------------------+
| import delete_dir Documents                    |
| import delete_dir Desktop                      |
| import delete_dir Pictures                     |
| import delete_dir Music                        |
+------------------------------------------------+


                    ------------------------------
                           Рабочие примеры
                    ------------------------------

С BatchBuilder поставляются примеры, названные как src-admin, src-alert и так далее. Для их запуска переименуйте папку в src, запустите build.cmd, а затем dist\bootstrap.cmd.